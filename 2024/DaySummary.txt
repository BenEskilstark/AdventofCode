Day 1:
    - comparing differences between sorted lists
    - comparing number of occurrences of values between lists
Day 2:
    - finding monotonic lists with less than certain distance between elements
    - finding those lists where removing one element also counts as passing
Day 3:
    - parsing a string for mul(3,2) commands
    - parsing that string but filtering by do() and don't()
Day 4:
    - Finding XMASes in a grid of chars
    - Finding MASes in an X shape in the grid of chars
Day 5:
    - Determining lists that are ordered based on pairwise ordering rules
    - Ordering the unordered lists based on those rules
Day 6:
    - positions of guard as she bounces around a grid
    - number of possible cycles created by guard by adding one obstacle at a time
Day 7:
    - Possible ways to add or multiply a list of numbers together
    - Add or multiply or string concat the list of numbers
Day 8:
    - Finding points (dist) away from each pair of points in a grid
    - Finding all points on a line between each pair of points in a grid
Day 9:
    - expanding lists of numbers into memory blocks and "compressing"
    - compressing only when whole blocks can be moved at a time
Day 10: 
    - number of paths through a topographic map (same start/end)
    - number of distinct paths through the map
Day 11:
    - number of stones produced after 25 iterations of an exponential expansion
    - number produced after 75 iterations of exponential expansion
Day 12:
    - Flood fill regions of a grid, then find area and perimeter of regions
    - Find the number of sides of each region
Day 13:
    - Solving pairs of linear equations
    - Solving pairs of linear equations with big coefficients
Day 14:
    - Finding positions of bots flying in straight lines after 100 steps
    - Finding which step has the bots arranged like a christmas tree
Day 15:
    - Pushing boxes around on a grid (they can push eachother)
    - Boxes are wider, one box could branch out to push multiple boxes 
Day 16:
    - Shortest path in a maze with penalty for turns
    - Find the total cells visited by all of the equivalent shortest paths
Day 17:
    - Implementing basic machine code program
    - Finding an input register value that makes the input program a quine
Day 18:
    - Pathfinding in a grid
    - Pathfinding many grids until a path cannot be found
Day 19:
    - Finding which sets of patterns are possible to produce w/set of substrings
    - Finding number of possible combinations of substrings that produce them
Day 20:
    - Shortest paths if you can pass through one wall
    - Shortest paths if you can pass through up to 20 walls in a row
Day 21:
    - Pressing remote control buttons for recursive series of robots
    - Way more robots in the chain of robots controlling the next's remotes
Day 22:
    - Finding the sum of a bunch of pseudo-randomly generated numbers
    - Finding the largest sequence of 4 differences in number across all sequences
Day 23:
    - Finding all cliques of size 3 in a graph
    - Finding the largest clique in a graph